{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FindOneAndUpdateOperation = exports.FindOneAndReplaceOperation = exports.FindOneAndDeleteOperation = exports.ReturnDocument = void 0;\nconst error_1 = require(\"../error\");\nconst read_preference_1 = require(\"../read_preference\");\nconst sort_1 = require(\"../sort\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @public */\nexports.ReturnDocument = Object.freeze({\n  BEFORE: 'before',\n  AFTER: 'after'\n});\nfunction configureFindAndModifyCmdBaseUpdateOpts(cmdBase, options) {\n  cmdBase.new = options.returnDocument === exports.ReturnDocument.AFTER;\n  cmdBase.upsert = options.upsert === true;\n  if (options.bypassDocumentValidation === true) {\n    cmdBase.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n  return cmdBase;\n}\n/** @internal */\nclass FindAndModifyOperation extends command_1.CommandOperation {\n  constructor(collection, query, options) {\n    super(collection, options);\n    this.options = options ?? {};\n    this.cmdBase = {\n      remove: false,\n      new: false,\n      upsert: false\n    };\n    const sort = (0, sort_1.formatSort)(options.sort);\n    if (sort) {\n      this.cmdBase.sort = sort;\n    }\n    if (options.projection) {\n      this.cmdBase.fields = options.projection;\n    }\n    if (options.maxTimeMS) {\n      this.cmdBase.maxTimeMS = options.maxTimeMS;\n    }\n    // Decorate the findAndModify command with the write Concern\n    if (options.writeConcern) {\n      this.cmdBase.writeConcern = options.writeConcern;\n    }\n    if (options.let) {\n      this.cmdBase.let = options.let;\n    }\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      this.cmdBase.comment = options.comment;\n    }\n    // force primary read preference\n    this.readPreference = read_preference_1.ReadPreference.primary;\n    this.collection = collection;\n    this.query = query;\n  }\n  execute(server, session, callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const options = {\n      ...this.options,\n      ...this.bsonOptions\n    };\n    // Create findAndModify command object\n    const cmd = {\n      findAndModify: coll.collectionName,\n      query: query,\n      ...this.cmdBase\n    };\n    // Have we specified collation\n    try {\n      (0, utils_1.decorateWithCollation)(cmd, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n    if (options.hint) {\n      // TODO: once this method becomes a CommandOperation we will have the server\n      // in place to check.\n      const unacknowledgedWrite = this.writeConcern?.w === 0;\n      if (unacknowledgedWrite || (0, utils_1.maxWireVersion)(server) < 8) {\n        callback(new error_1.MongoCompatibilityError('The current topology does not support a hint on findAndModify commands'));\n        return;\n      }\n      cmd.hint = options.hint;\n    }\n    // Execute the command\n    super.executeCommand(server, session, cmd, (err, result) => {\n      if (err) return callback(err);\n      return callback(undefined, result);\n    });\n  }\n}\n/** @internal */\nclass FindOneAndDeleteOperation extends FindAndModifyOperation {\n  constructor(collection, filter, options) {\n    // Basic validation\n    if (filter == null || typeof filter !== 'object') {\n      throw new error_1.MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n    super(collection, filter, options);\n    this.cmdBase.remove = true;\n  }\n}\nexports.FindOneAndDeleteOperation = FindOneAndDeleteOperation;\n/** @internal */\nclass FindOneAndReplaceOperation extends FindAndModifyOperation {\n  constructor(collection, filter, replacement, options) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new error_1.MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n    if (replacement == null || typeof replacement !== 'object') {\n      throw new error_1.MongoInvalidArgumentError('Argument \"replacement\" must be an object');\n    }\n    if ((0, utils_1.hasAtomicOperators)(replacement)) {\n      throw new error_1.MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n    super(collection, filter, options);\n    this.cmdBase.update = replacement;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n  }\n}\nexports.FindOneAndReplaceOperation = FindOneAndReplaceOperation;\n/** @internal */\nclass FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(collection, filter, update, options) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new error_1.MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n    if (update == null || typeof update !== 'object') {\n      throw new error_1.MongoInvalidArgumentError('Argument \"update\" must be an object');\n    }\n    if (!(0, utils_1.hasAtomicOperators)(update)) {\n      throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n    super(collection, filter, options);\n    this.cmdBase.update = update;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n    if (options.arrayFilters) {\n      this.cmdBase.arrayFilters = options.arrayFilters;\n    }\n  }\n}\nexports.FindOneAndUpdateOperation = FindOneAndUpdateOperation;\n(0, operation_1.defineAspects)(FindAndModifyOperation, [operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE]);","map":{"version":3,"names":["error_1","require","read_preference_1","sort_1","utils_1","command_1","operation_1","exports","ReturnDocument","Object","freeze","BEFORE","AFTER","configureFindAndModifyCmdBaseUpdateOpts","cmdBase","options","new","returnDocument","upsert","bypassDocumentValidation","FindAndModifyOperation","CommandOperation","constructor","collection","query","remove","sort","formatSort","projection","fields","maxTimeMS","writeConcern","let","comment","undefined","readPreference","ReadPreference","primary","execute","server","session","callback","coll","bsonOptions","cmd","findAndModify","collectionName","decorateWithCollation","err","hint","unacknowledgedWrite","w","maxWireVersion","MongoCompatibilityError","executeCommand","result","FindOneAndDeleteOperation","filter","MongoInvalidArgumentError","FindOneAndReplaceOperation","replacement","hasAtomicOperators","update","FindOneAndUpdateOperation","arrayFilters","defineAspects","Aspect","WRITE_OPERATION","RETRYABLE","EXPLAINABLE"],"sources":["../../src/operations/find_and_modify.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}