{"ast":null,"code":"const express = require('express');\nconst {\n  MongoClient\n} = require('mongodb');\nconst app = express();\n\n// Set up a MongoDB connection\nconst uri = 'mongodb://localhost:27017';\nconst client = new MongoClient(uri);\n\n// Connect to the database\nclient.connect(error => {\n  if (error) {\n    console.error('Failed to connect to MongoDB:', error);\n  } else {\n    console.log('Connected to MongoDB.');\n  }\n});\n\n// Define a route to fetch the feed data from the database\napp.get('/feeds', async (req, res) => {\n  try {\n    const database = client.db('your_database');\n    const collection = database.collection('your_collection');\n    const feeds = await collection.find().toArray();\n    res.send(feeds);\n  } catch (error) {\n    console.error('Failed to fetch feed data from MongoDB:', error);\n    res.status(500).send('Failed to fetch feed data from MongoDB.');\n  }\n});\n\n// Start the server\napp.listen(3000, () => {\n  console.log('Server listening on port 3000.');\n});","map":{"version":3,"names":["express","require","MongoClient","app","uri","client","connect","error","console","log","get","req","res","database","db","collection","feeds","find","toArray","send","status","listen"],"sources":["C:/Users/sama/Documents/fullpage/fullpage/src/comp/data.js"],"sourcesContent":["const express = require('express');\r\nconst { MongoClient } = require('mongodb');\r\n\r\nconst app = express();\r\n\r\n// Set up a MongoDB connection\r\nconst uri = 'mongodb://localhost:27017';\r\nconst client = new MongoClient(uri);\r\n\r\n// Connect to the database\r\nclient.connect((error) => {\r\n  if (error) {\r\n    console.error('Failed to connect to MongoDB:', error);\r\n  } else {\r\n    console.log('Connected to MongoDB.');\r\n  }\r\n});\r\n\r\n// Define a route to fetch the feed data from the database\r\napp.get('/feeds', async (req, res) => {\r\n  try {\r\n    const database = client.db('your_database');\r\n    const collection = database.collection('your_collection');\r\n    const feeds = await collection.find().toArray();\r\n    res.send(feeds);\r\n  } catch (error) {\r\n    console.error('Failed to fetch feed data from MongoDB:', error);\r\n    res.status(500).send('Failed to fetch feed data from MongoDB.');\r\n  }\r\n});\r\n\r\n// Start the server\r\napp.listen(3000, () => {\r\n  console.log('Server listening on port 3000.');\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC;AAAY,CAAC,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE1C,MAAME,GAAG,GAAGH,OAAO,EAAE;;AAErB;AACA,MAAMI,GAAG,GAAG,2BAA2B;AACvC,MAAMC,MAAM,GAAG,IAAIH,WAAW,CAACE,GAAG,CAAC;;AAEnC;AACAC,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAK;EACxB,IAAIA,KAAK,EAAE;IACTC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD,CAAC,MAAM;IACLC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,GAAG,CAAC,QAAQ,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAGR,MAAM,CAACS,EAAE,CAAC,eAAe,CAAC;IAC3C,MAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAU,CAAC,iBAAiB,CAAC;IACzD,MAAMC,KAAK,GAAG,MAAMD,UAAU,CAACE,IAAI,EAAE,CAACC,OAAO,EAAE;IAC/CN,GAAG,CAACO,IAAI,CAACH,KAAK,CAAC;EACjB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/DK,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC,yCAAyC,CAAC;EACjE;AACF,CAAC,CAAC;;AAEF;AACAhB,GAAG,CAACkB,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBb,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAC/C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}