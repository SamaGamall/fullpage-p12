{"ast":null,"code":"'use strict';\n\nconst Decimal = require('../types/decimal128');\nconst ObjectId = require('../types/objectid');\nconst specialProperties = require('./specialProperties');\nconst isMongooseObject = require('./isMongooseObject');\nconst getFunctionName = require('./getFunctionName');\nconst isBsonType = require('./isBsonType');\nconst isMongooseArray = require('../types/array/isMongooseArray').isMongooseArray;\nconst isObject = require('./isObject');\nconst isPOJO = require('./isPOJO');\nconst symbols = require('./symbols');\nconst trustedSymbol = require('./query/trusted').trustedSymbol;\n\n/**\n * Object clone with Mongoose natives support.\n *\n * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.\n *\n * Functions are never cloned.\n *\n * @param {Object} obj the object to clone\n * @param {Object} options\n * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.\n * @return {Object} the cloned object\n * @api private\n */\n\nfunction clone(obj, options, isArrayChild) {\n  if (obj == null) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return cloneArray(isMongooseArray(obj) ? obj.__array : obj, options);\n  }\n  if (isMongooseObject(obj)) {\n    // Single nested subdocs should apply getters later in `applyGetters()`\n    // when calling `toObject()`. See gh-7442, gh-8295\n    if (options && options._skipSingleNestedGetters && obj.$isSingleNested) {\n      options = Object.assign({}, options, {\n        getters: false\n      });\n    }\n    const isSingleNested = obj.$isSingleNested;\n    if (isPOJO(obj) && obj.$__ != null && obj._doc != null) {\n      return obj._doc;\n    }\n    let ret;\n    if (options && options.json && typeof obj.toJSON === 'function') {\n      ret = obj.toJSON(options);\n    } else {\n      ret = obj.toObject(options);\n    }\n    if (options && options.minimize && isSingleNested && Object.keys(ret).length === 0) {\n      return undefined;\n    }\n    return ret;\n  }\n  const objConstructor = obj.constructor;\n  if (objConstructor) {\n    switch (getFunctionName(objConstructor)) {\n      case 'Object':\n        return cloneObject(obj, options, isArrayChild);\n      case 'Date':\n        return new objConstructor(+obj);\n      case 'RegExp':\n        return cloneRegExp(obj);\n      default:\n        // ignore\n        break;\n    }\n  }\n  if (isBsonType(obj, 'ObjectId')) {\n    return new ObjectId(obj.id);\n  }\n  if (isBsonType(obj, 'Decimal128')) {\n    if (options && options.flattenDecimals) {\n      return obj.toJSON();\n    }\n    return Decimal.fromString(obj.toString());\n  }\n\n  // object created with Object.create(null)\n  if (!objConstructor && isObject(obj)) {\n    return cloneObject(obj, options, isArrayChild);\n  }\n  if (typeof obj === 'object' && obj[symbols.schemaTypeSymbol]) {\n    return obj.clone();\n  }\n\n  // If we're cloning this object to go into a MongoDB command,\n  // and there's a `toBSON()` function, assume this object will be\n  // stored as a primitive in MongoDB and doesn't need to be cloned.\n  if (options && options.bson && typeof obj.toBSON === 'function') {\n    return obj;\n  }\n  if (typeof obj.valueOf === 'function') {\n    return obj.valueOf();\n  }\n  return cloneObject(obj, options, isArrayChild);\n}\nmodule.exports = clone;\n\n/*!\n * ignore\n */\n\nfunction cloneObject(obj, options, isArrayChild) {\n  const minimize = options && options.minimize;\n  const omitUndefined = options && options.omitUndefined;\n  const seen = options && options._seen;\n  const ret = {};\n  let hasKeys;\n  if (seen && seen.has(obj)) {\n    return seen.get(obj);\n  } else if (seen) {\n    seen.set(obj, ret);\n  }\n  if (trustedSymbol in obj) {\n    ret[trustedSymbol] = obj[trustedSymbol];\n  }\n  let i = 0;\n  let key = '';\n  const keys = Object.keys(obj);\n  const len = keys.length;\n  for (i = 0; i < len; ++i) {\n    if (specialProperties.has(key = keys[i])) {\n      continue;\n    }\n\n    // Don't pass `isArrayChild` down\n    const val = clone(obj[key], options, false);\n    if ((minimize === false || omitUndefined) && typeof val === 'undefined') {\n      delete ret[key];\n    } else if (minimize !== true || typeof val !== 'undefined') {\n      hasKeys || (hasKeys = true);\n      ret[key] = val;\n    }\n  }\n  return minimize && !isArrayChild ? hasKeys && ret : ret;\n}\nfunction cloneArray(arr, options) {\n  let i = 0;\n  const len = arr.length;\n  const ret = new Array(len);\n  for (i = 0; i < len; ++i) {\n    ret[i] = clone(arr[i], options, true);\n  }\n  return ret;\n}\nfunction cloneRegExp(regexp) {\n  const ret = new RegExp(regexp.source, regexp.flags);\n  if (ret.lastIndex !== regexp.lastIndex) {\n    ret.lastIndex = regexp.lastIndex;\n  }\n  return ret;\n}","map":{"version":3,"names":["Decimal","require","ObjectId","specialProperties","isMongooseObject","getFunctionName","isBsonType","isMongooseArray","isObject","isPOJO","symbols","trustedSymbol","clone","obj","options","isArrayChild","Array","isArray","cloneArray","__array","_skipSingleNestedGetters","$isSingleNested","Object","assign","getters","isSingleNested","$__","_doc","ret","json","toJSON","toObject","minimize","keys","length","undefined","objConstructor","constructor","cloneObject","cloneRegExp","id","flattenDecimals","fromString","toString","schemaTypeSymbol","bson","toBSON","valueOf","module","exports","omitUndefined","seen","_seen","hasKeys","has","get","set","i","key","len","val","arr","regexp","RegExp","source","flags","lastIndex"],"sources":["C:/Users/sama/Documents/fullpage/node_modules/mongoose/lib/helpers/clone.js"],"sourcesContent":["'use strict';\n\nconst Decimal = require('../types/decimal128');\nconst ObjectId = require('../types/objectid');\nconst specialProperties = require('./specialProperties');\nconst isMongooseObject = require('./isMongooseObject');\nconst getFunctionName = require('./getFunctionName');\nconst isBsonType = require('./isBsonType');\nconst isMongooseArray = require('../types/array/isMongooseArray').isMongooseArray;\nconst isObject = require('./isObject');\nconst isPOJO = require('./isPOJO');\nconst symbols = require('./symbols');\nconst trustedSymbol = require('./query/trusted').trustedSymbol;\n\n/**\n * Object clone with Mongoose natives support.\n *\n * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.\n *\n * Functions are never cloned.\n *\n * @param {Object} obj the object to clone\n * @param {Object} options\n * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.\n * @return {Object} the cloned object\n * @api private\n */\n\nfunction clone(obj, options, isArrayChild) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    return cloneArray(isMongooseArray(obj) ? obj.__array : obj, options);\n  }\n\n  if (isMongooseObject(obj)) {\n    // Single nested subdocs should apply getters later in `applyGetters()`\n    // when calling `toObject()`. See gh-7442, gh-8295\n    if (options && options._skipSingleNestedGetters && obj.$isSingleNested) {\n      options = Object.assign({}, options, { getters: false });\n    }\n    const isSingleNested = obj.$isSingleNested;\n\n    if (isPOJO(obj) && obj.$__ != null && obj._doc != null) {\n      return obj._doc;\n    }\n\n    let ret;\n    if (options && options.json && typeof obj.toJSON === 'function') {\n      ret = obj.toJSON(options);\n    } else {\n      ret = obj.toObject(options);\n    }\n\n    if (options && options.minimize && isSingleNested && Object.keys(ret).length === 0) {\n      return undefined;\n    }\n\n    return ret;\n  }\n\n  const objConstructor = obj.constructor;\n\n  if (objConstructor) {\n    switch (getFunctionName(objConstructor)) {\n      case 'Object':\n        return cloneObject(obj, options, isArrayChild);\n      case 'Date':\n        return new objConstructor(+obj);\n      case 'RegExp':\n        return cloneRegExp(obj);\n      default:\n        // ignore\n        break;\n    }\n  }\n\n  if (isBsonType(obj, 'ObjectId')) {\n    return new ObjectId(obj.id);\n  }\n\n  if (isBsonType(obj, 'Decimal128')) {\n    if (options && options.flattenDecimals) {\n      return obj.toJSON();\n    }\n    return Decimal.fromString(obj.toString());\n  }\n\n  // object created with Object.create(null)\n  if (!objConstructor && isObject(obj)) {\n    return cloneObject(obj, options, isArrayChild);\n  }\n\n  if (typeof obj === 'object' && obj[symbols.schemaTypeSymbol]) {\n    return obj.clone();\n  }\n\n  // If we're cloning this object to go into a MongoDB command,\n  // and there's a `toBSON()` function, assume this object will be\n  // stored as a primitive in MongoDB and doesn't need to be cloned.\n  if (options && options.bson && typeof obj.toBSON === 'function') {\n    return obj;\n  }\n\n  if (typeof obj.valueOf === 'function') {\n    return obj.valueOf();\n  }\n\n  return cloneObject(obj, options, isArrayChild);\n}\nmodule.exports = clone;\n\n/*!\n * ignore\n */\n\nfunction cloneObject(obj, options, isArrayChild) {\n  const minimize = options && options.minimize;\n  const omitUndefined = options && options.omitUndefined;\n  const seen = options && options._seen;\n  const ret = {};\n  let hasKeys;\n\n  if (seen && seen.has(obj)) {\n    return seen.get(obj);\n  } else if (seen) {\n    seen.set(obj, ret);\n  }\n  if (trustedSymbol in obj) {\n    ret[trustedSymbol] = obj[trustedSymbol];\n  }\n\n  let i = 0;\n  let key = '';\n  const keys = Object.keys(obj);\n  const len = keys.length;\n\n  for (i = 0; i < len; ++i) {\n    if (specialProperties.has(key = keys[i])) {\n      continue;\n    }\n\n    // Don't pass `isArrayChild` down\n    const val = clone(obj[key], options, false);\n\n    if ((minimize === false || omitUndefined) && typeof val === 'undefined') {\n      delete ret[key];\n    } else if (minimize !== true || (typeof val !== 'undefined')) {\n      hasKeys || (hasKeys = true);\n      ret[key] = val;\n    }\n  }\n\n  return minimize && !isArrayChild ? hasKeys && ret : ret;\n}\n\nfunction cloneArray(arr, options) {\n  let i = 0;\n  const len = arr.length;\n  const ret = new Array(len);\n  for (i = 0; i < len; ++i) {\n    ret[i] = clone(arr[i], options, true);\n  }\n\n  return ret;\n}\n\nfunction cloneRegExp(regexp) {\n  const ret = new RegExp(regexp.source, regexp.flags);\n\n  if (ret.lastIndex !== regexp.lastIndex) {\n    ret.lastIndex = regexp.lastIndex;\n  }\n  return ret;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}